{% set name = "Quart" %}
{% set version = "0.18.0" %}
{% set sha256 = "0c2465ef5768890431650636f51fe2cc459de6cf4cf3363870ae2a1f3dba9eb1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 0
  noarch: python
  entry_points:
    - quart=quart.cli:main
  script: {{ PYTHON }} -m pip install . --no-deps -vv

requirements:
  host:
    - pip
    - python >=3.7.0
    - setuptools >=40.6.2
    - poetry-core >=1.0.0
    - toml

  run:
    - python >=3.7.0
    - aiofiles >=0.4.0
    - blinker >=1.4
    - click >=7.0
    - hypercorn >=0.11.2
    - importlib_metadata  # TODO: Remove for py>=38
    - itsdangerous >=1.1.0
    - jinja2 >=2.10
    - markupsafe
    - toml
    - typing_extensions  # TODO: Remove for py>=38
    - werkzeug >=2.2.0

test:
  imports:
    - quart
  commands:
    - quart --version

about:
  home: https://github.com/pallets/quart/
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: A Python ASGI web microframework with the same API as Flask
  description: |
    Quart is a Python ASGI web microframework. It is intended to provide the easiest way to use
    asyncio functionality in a web context, especially with existing Flask
    apps. This is possible as the Quart API is a superset of the Flask API.
    Quart aims to be a complete web microframework, as it supports
    HTTP/1.1, HTTP/2 and websockets. Quart is very extendable and has a
    number of known extensions and works
    with many of the Flask extensions.
    
    PyPI: [https://pypi.org/project/quart/](https://pypi.org/project/quart/)
    
  doc_url: https://quart.palletsprojects.com/
  dev_url: https://github.com/pallets/quart/

extra:
  recipe-maintainers:
    - maxyme
    - dhirschfeld
    - sugatoray
